name: Docker Publish

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_call:
    inputs:
      image-name:  
        description: 'owner/repo'
        required: true
        type: string
      event-name:  
        description: 'github.event_name'
        required: true
        type: string
      projectPath:  
        description: 'path to project and dockerfile'
        required: true
        type: string
      skip-version:  
        description: 'do not try and replace the version number in .NET projects'
        required: false
        type: boolean
        default: false
      dockerfile:  
        description: 'name of the dockerfile'
        required: false
        type: string
        default: Dockerfile
env:
  DOCKER_REGISTRY: ""  
  DOCKER_USERNAME: ""
  DOCKER_PASSWORD: ""
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: nowsprinting/check-version-format-action@v3
        id: version
        with:
          prefix: 'v'

      - name: Set live docker details
        if: steps.version.outputs.is_stable == 'true'
        run: |
          echo "DOCKER_REGISTRY=registry.digitalocean.com" >> $GITHUB_ENV
          echo "DOCKER_USERNAME=${{ secrets.DO_DOCKER_USERNAME }}" >> $GITHUB_ENV
          echo "DOCKER_PASSWORD=${{ secrets.DO_DOCKER_PASSWORD }}" >> $GITHUB_ENV
          
      - name: Set beta docker details
        if: steps.version.outputs.is_stable == 'false'
        run: |
          echo "DOCKER_REGISTRY=ghcr.io" >> $GITHUB_ENV
          echo "DOCKER_USERNAME=${{ secrets.DSSL_USERNAME }}" >> $GITHUB_ENV
          echo "DOCKER_PASSWORD=${{ secrets.DSSL_DOCKER }}" >> $GITHUB_ENV

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: inputs.event-name != 'pull_request'
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.13.1'

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ inputs.registry }}
        if: inputs.event-name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: $DOCKER_REGISTRY
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: $DOCKER_REGISTRY/${{ inputs.image-name }}          
          tags: |
            #type=ref,event=branch,suffix=-beta
            type=semver,pattern={{version}}
            type=raw,value=latest,enable=false
            
      - name: Set version number
        if: inputs.skip-version == false
        run: sed -i 's/<Version>\(.*\)<\/Version>/<Version>${{ steps.meta.outputs.version }}<\/Version>/' ${{ inputs.projectPath }}/*.csproj

      - name: add private GitHub registry to NuGet
        if: inputs.skip-version == false
        run: dotnet nuget add source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --configfile ./nuget.config --name github_pipeline --username ${{  secrets.DSSL_USERNAME }} --password ${{  secrets.DSSL_TOKEN }}  --store-password-in-clear-text

      - name: add nuget feed
        if: inputs.skip-version == false
        run: dotnet nuget add source https://api.nuget.org/v3/index.json --configfile ./nuget.config --name nuget_pipeline
        
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ inputs.projectPath }}/${{ inputs.dockerfile }}
          push: ${{ inputs.event-name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: VERSION=${{ steps.meta.outputs.version }}


      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      #- name: Sign the published Docker image
      #  if: ${{ inputs.event-name != 'pull_request' }}
      #  env:
      #    COSIGN_EXPERIMENTAL: "true"
      #  # This step uses the identity token to provision an ephemeral certificate
      #  # against the sigstore community Fulcio instance.
      #  run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }} --force
