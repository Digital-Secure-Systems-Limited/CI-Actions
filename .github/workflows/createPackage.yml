name: 'Create packages'
on:
  workflow_call:
    inputs:
      event-ref:  
        description: 'github.event.ref'
        required: true
        type: string
      ref-name:  
        description: 'github.ref_name'
        required: true
        type: string
      ref-cache-key:  
        description: 'cache-key'
        required: true
        type: string
      ref-alpha-release:
        description: 'alpha-release-key'
        required: true
        type: string

jobs:    
  create:
    needs: variables
    runs-on: ubuntu-latest
    steps:     
      - name: Set cache name
        run: |
          echo "CACHE_NAME="${{ env.CACHE_NAME }}${{ github.ref_name }}$(date +'%Y%m%d%H%M%S') >> $env:GITHUB_ENV

      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
              
      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build
        run: dotnet build --no-restore
        
      - name: Create live Package
        run: dotnet pack --configuration Release
        if: startsWith(inputs.event-ref, 'refs/tags/v')
          
      - name: Create alpha Package
        run: |
          echo "a${{ inputs.ref-alpha-release }}"
          dotnet pack --configuration Release --version-suffix "alpha.${{ inputs.ref-alpha-release }}"
        if: startsWith(inputs.event-ref, 'refs/tags/v') != true
        
      - name: Cache
        uses: actions/cache@v3        
        with:        
         path: ~/
         key: ${{ inputs.ref-cache-key }}      
        
  publish:
    runs-on: ubuntu-latest
    needs: create
    steps:   
    
     - name: Setup .NET
       uses: actions/setup-dotnet@v2
       with:
         dotnet-version: 6.0.x
         
     - name: Restore
       uses: actions/cache@v3
       with:
         path: ~/
         key: ${{ inputs.ref-cache-key }}    

     - name: Delete release packages
       uses: Digital-Secure-Systems-Limited/CI-Actions-DeleteRepoPackageVersion@main
       id: delete-nuget
       with:
          package-token: ${{ github.token }}
          package-version: ${{ github.ref_name }}
       if: startsWith(inputs.event-ref, 'refs/tags/v')
         
     - name: Publish
       run: dotnet nuget push "**/*.nupkg" --api-key ${{ secrets.GITHUB_TOKEN }} --source "github" --skip-duplicate -n

